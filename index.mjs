// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@v0.1.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@v0.1.1-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.1.1-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@v0.1.1-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@v0.1.1-esm/index.mjs";import{factory as d}from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-gamma@v0.1.0-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@v0.1.1-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@v0.1.0-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import{isPrimitive as u}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@v0.1.1-esm/index.mjs";function g(e,t){return u(e)?u(t)?null:new TypeError(p("invalid argument. Second argument must be a positive number. Value: `%s`.",t)):new TypeError(p("invalid argument. First argument must be a positive number. Value: `%s`.",e))}function f(){var u,f,h,j,v,c,b;if(0===arguments.length)u=d();else if(1===arguments.length){if(!s(j=arguments[0]))throw new TypeError(p("invalid argument. Options argument must be an object. Value: `%s`.",j));if(i(j,"prng")){if(!r(j.prng))throw new TypeError(p("invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.","prng",j.prng));u=d({prng:j.prng})}else u=d(j)}else{if(b=g(f=arguments[0],h=arguments[1]))throw b;if(arguments.length>2){if(!s(j=arguments[2]))throw new TypeError(p("invalid argument. Options argument must be an object. Value: `%s`.",j));if(i(j,"prng")){if(!r(j.prng))throw new TypeError(p("invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.","prng",j.prng));u=d(f,h,{prng:j.prng})}else u=d(f,h,j)}else u=d(f,h)}return c=void 0===f?V:T,v=u.PRNG,e(c,"NAME","invgamma"),j&&j.prng?(e(c,"seed",null),e(c,"seedLength",null),n(c,"state",o(null),m),e(c,"stateLength",null),e(c,"byteLength",null),e(c,"toJSON",o(null))):(t(c,"seed",y),t(c,"seedLength",x),n(c,"state",N,E),t(c,"stateLength",w),t(c,"byteLength",L),e(c,"toJSON",O)),e(c,"PRNG",v),c;function y(){return v.seed}function x(){return v.seedLength}function w(){return v.stateLength}function L(){return v.byteLength}function N(){return v.state}function E(e){v.state=e}function O(){var e={type:"PRNG"};return e.name=c.NAME,e.state=l(v.state),e.params=void 0===f?[]:[f,h],e}function T(){return 1/u()}function V(e,t){return a(e)||a(t)||e<=0||t<=0?NaN:1/u(e,t)}}var h=f();e(h,"factory",f);export{h as default,f as factory};
//# sourceMappingURL=index.mjs.map
