// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-gamma@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@esm/index.mjs";var u=p.isPrimitive;var g=function(e,t){return u(e)?u(t)?null:new TypeError("invalid argument. `beta` must be a positive number. Value: `"+t+"`."):new TypeError("invalid argument. `alpha` must be a positive number. Value: `"+e+"`.")},h=e,f=t,j=n,c=r,b=s,v=i,y=o,w=a,x=m.factory,L=d,N=l,E=g;var O=function(){var e,t,n,r,s,i,o;if(0===arguments.length)e=x();else if(1===arguments.length){if(!c(r=arguments[0]))throw new TypeError("invalid argument. Options argument must be an object. Value: `"+r+"`.");if(v(r,"prng")){if(!b(r.prng))throw new TypeError("invalid option. `prng` option must be a pseudorandom number generator function. Option: `"+r.prng+"`.");e=x({prng:r.prng})}else e=x(r)}else{if(o=E(t=arguments[0],n=arguments[1]))throw o;if(arguments.length>2){if(!c(r=arguments[2]))throw new TypeError("invalid argument. Options argument must be an object. Value: `"+r+"`.");if(v(r,"prng")){if(!b(r.prng))throw new TypeError("invalid option. `prng` option must be a pseudorandom number generator function. Option: `"+r.prng+"`.");e=x(t,n,{prng:r.prng})}else e=x(t,n,r)}else e=x(t,n)}return i=void 0===t?T:O,s=e.PRNG,h(i,"NAME","invgamma"),r&&r.prng?(h(i,"seed",null),h(i,"seedLength",null),j(i,"state",y(null),w),h(i,"stateLength",null),h(i,"byteLength",null),h(i,"toJSON",y(null))):(f(i,"seed",a),f(i,"seedLength",m),j(i,"state",p,u),f(i,"stateLength",d),f(i,"byteLength",l),h(i,"toJSON",g)),h(i,"PRNG",s),i;function a(){return s.seed}function m(){return s.seedLength}function d(){return s.stateLength}function l(){return s.byteLength}function p(){return s.state}function u(e){s.state=e}function g(){var e={type:"PRNG"};return e.name=i.NAME,e.state=N(s.state),e.params=void 0===t?[]:[t,n],e}function O(){return 1/e()}function T(t,n){return L(t)||L(n)||t<=0||n<=0?NaN:1/e(t,n)}},T=O(),P=O;e(T,"factory",P);var V=T;export{V as default,P as factory};
//# sourceMappingURL=index.mjs.map
