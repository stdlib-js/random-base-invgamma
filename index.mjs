// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-gamma@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@esm/index.mjs";var g=u.isPrimitive;var f=function(e,t){return g(e)?g(t)?null:new TypeError(format("invalid argument. `%s` must be a positive number. Value: `%s`.","beta",t)):new TypeError(format("invalid argument. `%s` must be a positive number. Value: `%s`.","alpha",e))},h=e,j=t,c=n,b=s,v=r,y=i,x=o,w=m,L=a.factory,N=d,E=l,O=p,T=f;var P=function(){var e,t,n,s,r,i,o;if(0===arguments.length)e=L();else if(1===arguments.length){if(!b(s=arguments[0]))throw new TypeError(O("invalid argument. Options argument must be an object. Value: `%s`.",s));if(y(s,"prng")){if(!v(s.prng))throw new TypeError(O("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",s.prng));e=L({prng:s.prng})}else e=L(s)}else{if(o=T(t=arguments[0],n=arguments[1]))throw o;if(arguments.length>2){if(!b(s=arguments[2]))throw new TypeError(O("invalid argument. Options argument must be an object. Value: `%s`.",s));if(y(s,"prng")){if(!v(s.prng))throw new TypeError(O("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",s.prng));e=L(t,n,{prng:s.prng})}else e=L(t,n,s)}else e=L(t,n)}return i=void 0===t?P:f,r=e.PRNG,h(i,"NAME","invgamma"),s&&s.prng?(h(i,"seed",null),h(i,"seedLength",null),c(i,"state",x(null),w),h(i,"stateLength",null),h(i,"byteLength",null),h(i,"toJSON",x(null))):(j(i,"seed",m),j(i,"seedLength",a),c(i,"state",p,u),j(i,"stateLength",d),j(i,"byteLength",l),h(i,"toJSON",g)),h(i,"PRNG",r),i;function m(){return r.seed}function a(){return r.seedLength}function d(){return r.stateLength}function l(){return r.byteLength}function p(){return r.state}function u(e){r.state=e}function g(){var e={type:"PRNG"};return e.name=i.NAME,e.state=E(r.state),e.params=void 0===t?[]:[t,n],e}function f(){return 1/e()}function P(t,n){return N(t)||N(n)||t<=0||n<=0?NaN:1/e(t,n)}},V=P(),G=P;e(V,"factory",G);var R=V;export{R as default,G as factory};
//# sourceMappingURL=index.mjs.map
